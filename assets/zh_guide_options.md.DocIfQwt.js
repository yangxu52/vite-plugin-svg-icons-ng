import{_ as i,c as a,o as e,ae as n}from"./chunks/framework.B_k2HZex.js";const k=JSON.parse('{"title":"插件选项","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/options.md","filePath":"zh/guide/options.md"}'),o={name:"zh/guide/options.md"};function l(t,s,d,c,p,r){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="插件选项" tabindex="-1">插件选项 <a class="header-anchor" href="#插件选项" aria-label="Permalink to &quot;插件选项&quot;">​</a></h1><p>插件选项可以传递给 <code>createSvgIconsPlugin</code> 方法.</p><h2 id="icondirs" tabindex="-1">iconDirs <a class="header-anchor" href="#icondirs" aria-label="Permalink to &quot;iconDirs&quot;">​</a></h2><ul><li>类型: <code>string[]</code></li><li>必填: <code>true</code></li></ul><p>配置插件遍历用来生成 SVG精灵图 的 SVG文件 所在的文件夹。</p><p>示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSvgIconsPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  iconDirs: [path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src/icons&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span></code></pre></div><div class="warning custom-block github-alert"><p class="custom-block-title">注意</p><p>虽然用文件夹路径来区分已经可以很大程度避免重名问题了，<br> 但是也会出现<code>iconDirs</code>配置多个文件夹，且存在文件名一样的 svg 。<br> 这需要开发者自己规避。</p></div><h2 id="symbolid" tabindex="-1">symbolId <a class="header-anchor" href="#symbolid" aria-label="Permalink to &quot;symbolId&quot;">​</a></h2><ul><li>类型: <code>string</code></li><li>default: <code>icon-[dir]-[name]</code></li></ul><p>SVG精灵图中的子节点 <code>&lt;symbol&gt;</code> 的 <code>id</code> 属性。<br> 选项值可以包含占位符 <code>[name]</code> 和 <code>[dir]</code>。</p><ul><li><code>[name]</code>: SVG文件 的文件名, <strong>不含扩展名</strong>.</li><li><code>[dir]</code>: 配置的<code>iconDirs</code>文件夹到所含 SVG文件 的<strong>相对路径</strong></li></ul><p>示例：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSvgIconsPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  iconDirs: [path.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src/icons&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)],</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  symbolId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;icon-[dir]-[name]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>src/icons/</span></span>
<span class="line"><span>├── dir/</span></span>
<span class="line"><span>│ └── icon1.svg # icon-dir-icon1</span></span>
<span class="line"><span>├── icon1.svg # icon-icon1</span></span>
<span class="line"><span>└── icon2.svg # icon-icon2</span></span></code></pre></div><div class="warning custom-block github-alert"><p class="custom-block-title">注意</p><p><code>symbolId</code> 除了占位符本身外，必须是合法的 ASCII <code>字母</code>、<code>数字</code>、<code>下划线</code>和<code>连字符</code>。<br><code>symbolId</code> 必须包含 <code>[name]</code> 占位符， 否则会抛出错误。</p></div><h2 id="svgooptions" tabindex="-1">svgoOptions <a class="header-anchor" href="#svgooptions" aria-label="Permalink to &quot;svgoOptions&quot;">​</a></h2><ul><li>类型: <code>SvgoOptions | false</code></li><li>default: <code>{}</code></li></ul><p>SVGO <code>optimize</code> 选项，详情：<a href="https://github.com/svg/svgo#configuration" target="_blank" rel="noreferrer">SVGO</a>， 或者覆盖 <code>false</code> 禁用 SVGO 相关优化。</p><div class="warning custom-block github-alert"><p class="custom-block-title">注意</p><p>如果你不知道这是什么，请不要覆盖这个选项。</p></div><h2 id="inject" tabindex="-1">inject <a class="header-anchor" href="#inject" aria-label="Permalink to &quot;inject&quot;">​</a></h2><ul><li>类型: <code>string</code></li><li>default: <code>body-last</code></li><li>options: <code>body-first</code> | <code>body-last</code></li></ul><p>SVG精灵图的插入DOM的位置。</p><h2 id="customdomid" tabindex="-1">customDomId <a class="header-anchor" href="#customdomid" aria-label="Permalink to &quot;customDomId&quot;">​</a></h2><ul><li>类型: <code>string</code></li><li>default: <code>__svg__icons__dom__</code></li></ul><p>自定义SVG精灵图的插入DOM节点的ID属性。</p><h2 id="strokeoverride" tabindex="-1">strokeOverride <a class="header-anchor" href="#strokeoverride" aria-label="Permalink to &quot;strokeOverride&quot;">​</a></h2><ul><li>类型: <code>boolean | { color: string }</code></li><li>default: <code>false</code></li></ul><p>覆盖 <code>stroke</code> 属性，设置 <code>false</code> 禁用该功能，设置 <code>true</code> 为 <code>currentColor</code> 或者设置对象来自定义颜色。</p>`,29)]))}const g=i(o,[["render",l]]);export{k as __pageData,g as default};
